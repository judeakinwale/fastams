{"version":3,"file":"static/js/27.69156b9a.chunk.js","mappings":"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","sources":["modules/Admin/Users/column.js","modules/Admin/Users/index.js","modules/Auth/Register/hooks/index.js"],"sourcesContent":["export const columns = [\r\n  // { title: \"S/N\", field: \"Tableid\",render: (rowData) => rowData.tableData.id + 1},\r\n  { title: \"First Name\", field: \"first_name\" },\r\n  { title: \"Last Name\", field: \"last_name\" },\r\n  { title: \"Email\", field: \"email\" },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"../../../shared/report.css\";\r\nimport \"../../../shared/button.css\";\r\nimport \"../../../shared/settings.css\";\r\nimport { Table } from \"mtforms\";\r\nimport { columns } from \"./column\";\r\nimport {\r\n  useAddAdmin,\r\n  useDeleteUser,\r\n  useGetLocation,\r\n  useGetUsers,\r\n  useUpdateUser,\r\n} from \"../hooks\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { Button, FormGroup, Input, Select } from \"mtforms\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { errorAlert, successAlert, toastOptions } from \"../../../utils\";\r\nimport swal from \"sweetalert\";\r\nimport { PrivatePaths } from \"../../../routes/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Layout from \"../../../layout\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport excel from \"../../../assets/excel.png\";\r\nimport * as XLSX from \"xlsx\";\r\nimport excelTemp from \"../../../assets/templates/StaffTemplate.xlsx\";\r\nimport { FaFileExcel } from \"react-icons/fa\";\r\nimport { useBulkRegister } from \"../../Auth/Register/hooks\";\r\n\r\nconst Users = () => {\r\n  const { data } = useGetUsers();\r\n  const [user, setUser] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [singleStaff, setSingleStaff] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const { mutate, isSuccess, reset } = useAddAdmin();\r\n  const navigate = useNavigate();\r\n  const { data: locations } = useGetLocation();\r\n  // console.log(\"user:\",data)\r\n  const [openBulk, setOpenBulk] = useState(false);\r\n  const [upload, setUpload] = useState(false);\r\n  const [excelData, setExcelData] = useState([]);\r\n  // get admins from data\r\n  const admin = data?.filter((x) => x.is_admin === true);\r\n\r\n  const isLoading = useIsMutating();\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const {\r\n    mutate: remove,\r\n    isError: isEDelete,\r\n    isSuccess: isSDelete,\r\n    reset: eReset,\r\n    error: Error,\r\n  } = useDeleteUser();\r\n\r\n  if (isEDelete) {\r\n    eReset();\r\n\r\n    errorAlert(Error);\r\n  }\r\n  if (isSDelete) {\r\n    eReset();\r\n    toast.success(`User Deleted Successfully`, toastOptions);\r\n  }\r\n\r\n  const {\r\n    mutate: removeAdmin,\r\n    isError: isRemoveAdminErr,\r\n    isSuccess: isRemoveAdminSuccess,\r\n    reset: eRemoveAdminReset,\r\n    error: ErrorRA,\r\n  } = useUpdateUser();\r\n\r\n  const {\r\n    mutate: updateUser,\r\n    isError: isUpdateErr,\r\n    isSuccess: isUpdateSuccess,\r\n    reset: eUpdateReset,\r\n    error: updateError,\r\n  } = useUpdateUser();\r\n\r\n  if (isRemoveAdminErr) {\r\n    eRemoveAdminReset();\r\n\r\n    errorAlert(ErrorRA);\r\n  }\r\n  if (isRemoveAdminSuccess) {\r\n    eRemoveAdminReset();\r\n    toast.success(`Successful`, toastOptions);\r\n  }\r\n\r\n  if (isUpdateErr) {\r\n    eUpdateReset();\r\n\r\n    errorAlert(updateError);\r\n  }\r\n  if (isUpdateSuccess) {\r\n    eUpdateReset();\r\n    toast.success(`user updated successfully`, toastOptions);\r\n    setFormData({});\r\n    setOpenEdit(false);\r\n  }\r\n\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n\r\n  if (isSuccess) {\r\n    setFormData({});\r\n    setOpen(false);\r\n    reset();\r\n    toast.success(`Admin added Successfully`, toastOptions);\r\n  }\r\n\r\n  const editHandler = () => {\r\n    updateUser(formData);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setOpenEdit(false);\r\n    setFormData({});\r\n  };\r\n\r\n  const actions = (item) => [\r\n    {\r\n      name: \"Attendance History\",\r\n      onClick: (res) => {\r\n        navigate(`${PrivatePaths.ADMIN_USER_HISTORY}/${res.id}`);\r\n      },\r\n    },\r\n    {\r\n      name: \"Edit User\",\r\n      onClick: (res) => {\r\n        setFormData(res);\r\n        setOpenEdit(true);\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete User\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"Once deleted, you will not be able to recover this\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            remove(res.id);\r\n          }\r\n        });\r\n      },\r\n    },\r\n    {\r\n      name: \"Add as Admin\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"This user will have admin privilegde\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            const addAdminData = { ...formData, id: res.id, is_admin: true };\r\n            removeAdmin(addAdminData);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  const adminActions = (item) => [\r\n    {\r\n      name: \"Remove as Admin\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"This user will no longer have admin privilegde\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            const addAdminData = { ...formData, id: res.id, is_admin: false };\r\n            removeAdmin(addAdminData);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  const singleStaffHandler = () => {\r\n    setSingleStaff(!singleStaff);\r\n    setFormData(\"\");\r\n  };\r\n\r\n  const openBulkHandler = () => {\r\n    setOpenBulk(!openBulk);\r\n    setFormData(\"\");\r\n  };\r\n\r\n  const fileChange = (e) => {\r\n    setUpload(true);\r\n    const file = e.target.files[0];\r\n    var allowedExtensions =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ||\r\n      \"application/vnd.ms-excel\" ||\r\n      \".csv\";\r\n    if (file.type !== allowedExtensions) {\r\n      setUpload(false);\r\n      return toast.error(\"Invalid File\", toastOptions);\r\n    } else {\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        var data = reader.result;\r\n        let readedData = XLSX.read(data, { type: \"binary\" });\r\n        const wsname = readedData.SheetNames[0];\r\n        const ws = readedData.Sheets[wsname];\r\n        /* Convert array to json*/\r\n        const dataParse = XLSX.utils.sheet_to_json(ws);\r\n        if (dataParse.length === 0) {\r\n          setUpload(false);\r\n          toast.error(\"Document is empty\", toastOptions);\r\n\r\n          return;\r\n        } else {\r\n          setUpload(false);\r\n          setExcelData(dataParse);\r\n          // toast.success(\"Upload Successful\");\r\n        }\r\n      };\r\n\r\n      reader.readAsBinaryString(file);\r\n      // history.push(\"/newclaim/screen/2\")\r\n    }\r\n  };\r\n\r\n  const {\r\n    mutate: bulk,\r\n    isSuccess: isBulkSuccess,\r\n    isError: isBulkError,\r\n    error: bulkError,\r\n    reset: bulkReset,\r\n  } = useBulkRegister();\r\n\r\n  if (isBulkSuccess) {\r\n    bulkReset();\r\n    successAlert(\"Uploaded Successfully\");\r\n    setOpenBulk(false);\r\n    setExcelData([]);\r\n    setSingleStaff(false);\r\n  }\r\n  if (isBulkError) {\r\n    bulkReset();\r\n    errorAlert(bulkError);\r\n  }\r\n  const uploadHandler = () => {\r\n    var data = [];\r\n    for (var i = 0; i < excelData.length; i++) {\r\n      data.push({\r\n        first_name: excelData[i].Firstname,\r\n        last_name: excelData[i].Lastname,\r\n        email: excelData[i].Email,\r\n        ...formData,\r\n      });\r\n    }\r\n    if (data.length === 0) {\r\n      return toast.error(\"No Data to upload\");\r\n    }\r\n    bulk(data);\r\n  };\r\n\r\n  const singleHandler = () => {\r\n    var data = [formData];\r\n\r\n    bulk(data);\r\n  };\r\n  return (\r\n    <Layout name=\"User\" title=\"Users\">\r\n      <div className=\"report_container\">\r\n        <div className=\"button_container\">\r\n          <button\r\n            className={user ? \"btn btnPurple\" : \"btn\"}\r\n            onClick={() => {\r\n              setUser(!user);\r\n            }}\r\n          >\r\n            All Staffs\r\n          </button>\r\n          <button\r\n            button\r\n            className={!user ? \"btn btnPurple\" : \"btn\"}\r\n            onClick={() => {\r\n              setUser(!user);\r\n            }}\r\n          >\r\n            Admins\r\n          </button>\r\n          {!user ? (\r\n            <button\r\n              button\r\n              className={\"btn btnGreenPry\"}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Add Admin\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"table_container\">\r\n          {user ? (\r\n            <>\r\n              <div className=\"btnContainer\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={singleStaffHandler}\r\n                  className=\"btn btnSuccess\"\r\n                >\r\n                  Add Staff\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={openBulkHandler}\r\n                  className=\"btn btnYellow\"\r\n                >\r\n                  Staff Bulk Upload\r\n                </button>\r\n              </div>\r\n              <Table\r\n                columns={columns}\r\n                data={data}\r\n                actions={actions}\r\n                selectID=\"id\"\r\n              />\r\n            </>\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              data={admin}\r\n              actions={adminActions}\r\n              selectID=\"id\"\r\n            />\r\n          )}\r\n        </div>\r\n        <Modal\r\n          isVisible={open}\r\n          title={\"\"}\r\n          size=\"md\"\r\n          content={\r\n            <div className=\"modal_form_container\">\r\n              <FormGroup\r\n                onSubmit={submitHandler}\r\n                validation={formData}\r\n                errors={errors}\r\n                setErrors={setErrors}\r\n                className=\"Form\"\r\n              >\r\n                <Input\r\n                  name=\"first_name\"\r\n                  label=\"First Name\"\r\n                  value={formData[\"first_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.first_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Input\r\n                  name=\"last_name\"\r\n                  label=\"Last Name\"\r\n                  value={formData[\"last_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.last_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formData[\"email\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.email}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"location_id\"\r\n                  label=\"Location\"\r\n                  value={formData[\"location_id\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.location_id}\r\n                  required={true}\r\n                  data={locations}\r\n                  filter={\"name\"}\r\n                  filterValue={\"id\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"is_on_leave\"\r\n                  label=\"Is on Leave\"\r\n                  value={formData[\"is_on_leave\"]}\r\n                  onChange={handleChange}\r\n                  type=\"checkbox\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.is_on_leave}\r\n                  // required={true}\r\n                  data={[\r\n                    { name: \"True\", value: true },\r\n                    { name: \"False\", value: false },\r\n                  ]}\r\n                  filter={\"name\"}\r\n                  filterValue={\"value\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Button\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  title={isLoading ? \"loading..\" : \"Add\"}\r\n                  disabled={isLoading ? true : false}\r\n                  className=\"formButton btnPurple\"\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          }\r\n          onClose={() => setOpen(false)}\r\n          footer=\"\"\r\n        />\r\n\r\n        <Modal\r\n          isVisible={openEdit}\r\n          title={\"\"}\r\n          size=\"md\"\r\n          content={\r\n            <div className=\"modal_form_container\">\r\n              <FormGroup\r\n                onSubmit={editHandler}\r\n                validation={formData}\r\n                errors={errors}\r\n                setErrors={setErrors}\r\n                className=\"Form\"\r\n              >\r\n                <Input\r\n                  name=\"first_name\"\r\n                  label=\"First Name\"\r\n                  value={formData[\"first_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.first_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Input\r\n                  name=\"last_name\"\r\n                  label=\"Last Name\"\r\n                  value={formData[\"last_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.last_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formData[\"email\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.email}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"location_id\"\r\n                  label=\"Location\"\r\n                  value={formData[\"location_id\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.location_id}\r\n                  required={true}\r\n                  data={locations}\r\n                  filter={\"name\"}\r\n                  filterValue={\"id\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"is_on_leave\"\r\n                  label=\"Is on Leave\"\r\n                  value={formData[\"is_on_leave\"]}\r\n                  onChange={handleChange}\r\n                  type=\"checkbox\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.is_on_leave}\r\n                  // required={true}\r\n                  data={[\r\n                    { name: \"True\", value: true },\r\n                    { name: \"False\", value: false },\r\n                  ]}\r\n                  filter={\"name\"}\r\n                  filterValue={\"value\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Button\r\n                  size=\"large\"\r\n                  onClick={editHandler}\r\n                  type=\"button\"\r\n                  title={isLoading ? \"loading..\" : \"Save\"}\r\n                  disabled={isLoading ? true : false}\r\n                  className=\"formButton\"\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          }\r\n          onClose={closeHandler}\r\n          footer=\"\"\r\n        />\r\n\r\n        <Modal\r\n          isVisible={singleStaff}\r\n          title={\"Create User Account\"}\r\n          size=\"md\"\r\n          content={\r\n            <div className=\"modal_form_container\">\r\n              <FormGroup\r\n                onSubmit={singleHandler}\r\n                validation={formData}\r\n                errors={errors}\r\n                setErrors={setErrors}\r\n                className=\"Form\"\r\n              >\r\n                <Input\r\n                  name=\"first_name\"\r\n                  label=\"First Name\"\r\n                  value={formData[\"first_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.first_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Input\r\n                  name=\"last_name\"\r\n                  label=\"Last Name\"\r\n                  value={formData[\"last_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.last_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formData[\"email\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.email}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"location_id\"\r\n                  label=\"Location\"\r\n                  value={formData[\"location_id\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.location_id}\r\n                  required={true}\r\n                  data={locations}\r\n                  filter={\"name\"}\r\n                  filterValue={\"id\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Button\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  title={isLoading ? \"loading..\" : \"Add\"}\r\n                  disabled={isLoading ? true : false}\r\n                  bgColor=\"btnYellow\"\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          }\r\n          onClose={() => setSingleStaff(false)}\r\n          footer=\"\"\r\n        />\r\n\r\n        <Modal\r\n          isVisible={openBulk}\r\n          title={\"Employee Bulk Upload\"}\r\n          size=\"md\"\r\n          content={\r\n            <div className=\"bulkModal\">\r\n              <h4>Download Sample File</h4>\r\n              <br />\r\n              <div className=\"downloadTemp\">\r\n                <span>\r\n                  <img src={excel} alt=\"Excel Icon\" />\r\n                  Sample items upload\r\n                </span>\r\n                <a href={excelTemp} download>\r\n                  Download\r\n                </a>\r\n              </div>\r\n              <h4>Upload .xlsx file</h4>\r\n              <br />\r\n              {upload ? (\r\n                <ThreeDots width=\"200\" color=\"#c21f4a\" />\r\n              ) : (\r\n                <div className=\"bulkUploadModal\">\r\n                  <FaFileExcel /> <h5>Select an XLSX file to upload</h5>\r\n                  <input type=\"file\" onChange={fileChange} />\r\n                </div>\r\n              )}\r\n              {excelData?.length > 0 && (\r\n                <>\r\n                  <Select\r\n                    name=\"location_id\"\r\n                    label=\"Location\"\r\n                    value={formData[\"location_id\"]}\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    validationHandler={validationHandler}\r\n                    error={errors.location_id}\r\n                    required={true}\r\n                    data={locations}\r\n                    filter={\"name\"}\r\n                    filterValue={\"id\"}\r\n                    size=\"large\"\r\n                    className=\"formInput\"\r\n                  />\r\n                </>\r\n              )}\r\n              <div className=\"modalBtnContainer right\">\r\n                <Button\r\n                  title=\"Cancel\"\r\n                  loading={isLoading === 1}\r\n                  disabled={isLoading === 1}\r\n                  bgColor=\"btnBlack\"\r\n                  size=\"small\"\r\n                  onClick={openBulkHandler}\r\n                  type=\"button\"\r\n                />\r\n\r\n                <Button\r\n                  title=\"Upload\"\r\n                  loading={isLoading === 1}\r\n                  disabled={isLoading === 1}\r\n                  bgColor=\"btnYellow\"\r\n                  size=\"small\"\r\n                  onClick={uploadHandler}\r\n                  type=\"button\"\r\n                />\r\n              </div>\r\n            </div>\r\n          }\r\n          onClose={() => setOpenBulk(false)}\r\n          footer=\"\"\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useNavigate } from \"react-router-dom\";\nimport { axiosInstance } from \"../../../../axios-Instance\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { errorAlert, successAlert } from \"../../../../utils\";\nimport { queryKeys } from \"../../../../react-query/constants\";\n\nasync function userRegister(formData) {\n  // Convert JSON data to FormData\n  const newFormData = new FormData();\n  // formData[\"file\"] = formData?.image // the backend needs \"file\", the formdata has \"image\"\n  Object.keys(formData).forEach((key) => {\n    newFormData.append(key, formData[key]);\n  });\n  const data = await axiosInstance({\n    url: \"/user\",\n    method: \"POST\",\n    data: newFormData,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\n\n  return data?.data;\n}\n\nasync function BulkUpload(excelData) {\n  const result = await Promise.allSettled(\n    excelData.map(async (formData) => {\n      try {\n        const response = await axiosInstance({\n          url: `/user`,\n          method: \"POST\",\n          data: formData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n        return await response;\n      } catch (err) {\n        return err;\n      }\n    })\n  );\n\n  return await result;\n}\n\nexport function useRegister() {\n  const navigate = useNavigate();\n  const { mutate, isError, error, isSuccess, reset, data } = useMutation({\n    mutationFn: (formData) => userRegister(formData),\n    onSuccess: () => {\n      successAlert(\"Registration Successful\");\n      // setTimeout(() => {\n      // \tnavigate(PublicPaths.HOME);\n      // }, 3000);\n    },\n    onError: (error) => {\n      errorAlert(error);\n    },\n  });\n  return { mutate, isError, error, isSuccess, reset, data };\n}\n\nexport function useBulkRegister() {\n  const queryClient = useQueryClient();\n  const { mutate, isError, error, isSuccess, reset, data } = useMutation({\n    mutationFn: (formData) => BulkUpload(formData),\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.user]);\n    },\n  });\n  return { mutate, isError, error, isSuccess, reset, data };\n}\n"],"names":["columns","title","field","data","useGetUsers","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","open","setOpen","_useState5","_useState6","formData","setFormData","_useState7","_useState8","openEdit","setOpenEdit","_useState9","_useState10","singleStaff","setSingleStaff","_useState11","_useState12","errors","setErrors","_useAddAdmin","useAddAdmin","mutate","isSuccess","reset","navigate","useNavigate","locations","useGetLocation","_useState13","_useState14","openBulk","setOpenBulk","_useState15","_useState16","upload","setUpload","_useState17","_useState18","excelData","setExcelData","admin","filter","x","is_admin","isLoading","useIsMutating","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","error","_useDeleteUser","useDeleteUser","remove","isEDelete","isError","isSDelete","eReset","Error","errorAlert","toast","toastOptions","_useUpdateUser","useUpdateUser","removeAdmin","isRemoveAdminErr","isRemoveAdminSuccess","eRemoveAdminReset","ErrorRA","_useUpdateUser2","updateUser","isUpdateErr","isUpdateSuccess","eUpdateReset","updateError","editHandler","openBulkHandler","_useBulkRegister","useBulkRegister","bulk","isBulkSuccess","isBulkError","bulkError","bulkReset","successAlert","_jsx","Layout","children","_jsxs","className","onClick","button","_Fragment","type","Table","actions","item","res","concat","PrivatePaths","id","swal","text","icon","buttons","dangerMode","then","willDelete","addAdminData","selectID","Modal","isVisible","size","content","FormGroup","onSubmit","validation","Input","label","onChange","first_name","required","readOnly","last_name","email","Select","location_id","filterValue","is_on_leave","Button","disabled","onClose","footer","bgColor","src","excel","alt","href","excelTemp","download","ThreeDots","width","color","FaFileExcel","e","file","target","files","reader","FileReader","onload","result","readedData","XLSX","wsname","SheetNames","ws","Sheets","dataParse","length","readAsBinaryString","loading","i","push","Firstname","Lastname","Email","_userRegister","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newFormData","wrap","_context","prev","next","FormData","Object","keys","forEach","key","append","axiosInstance","url","method","headers","sent","abrupt","stop","apply","arguments","_BulkUpload","_callee3","_context3","Promise","allSettled","map","_ref","_callee2","response","_context2","t0","_x3","useRegister","_useMutation","useMutation","mutationFn","_x","userRegister","onSuccess","onError","queryClient","useQueryClient","_useMutation2","_x2","BulkUpload","invalidateQueries","queryKeys"],"sourceRoot":""}