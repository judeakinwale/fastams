{"version":3,"file":"static/js/689.4b8384ca.chunk.js","mappings":"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","sources":["components/AdminSettingsHeader/index.jsx","components/Modal/index.jsx","modules/Admin/Settings/util.js","modules/Admin/Settings/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PrivatePaths } from \"../../routes/path\";\r\nimport \"./styles.css\";\r\n\r\nconst AdminSettingsHeader = (props) => {\r\n\treturn (\r\n\t\t<div className=\"menubar\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li className={props.time}>\r\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS}> Time</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={props.location}>\r\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS_LOCATION}>\r\n\t\t\t\t\t\tLocation\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li className={props.authentication}>\r\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS_AUTHENTICATION}>\r\n\t\t\t\t\t\tAuthentication\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AdminSettingsHeader;\r\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport \"./modal.css\";\n\nconst Modal = ({\n  isVisible = false,\n  title,\n  content,\n  footer,\n  onClose,\n  size = \"md\",\n}) => {\n  const keydownHandler = ({ key }) => {\n    switch (key) {\n      case \"Escape\":\n        onClose();\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keydownHandler);\n    return () => document.removeEventListener(\"keydown\", keydownHandler);\n  });\n\n  return !isVisible ? null : (\n    <div className=\"modal\" onClick={onClose}>\n      <div className={`closeCon ${size}`}>\n        <span className=\"modal-close\" onClick={onClose}>\n          &times;\n        </span>\n      </div>\n\n      <div\n        className={`modal-dialog ${size}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\">{title}</h3>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"modal-content\">{content}</div>\n        </div>\n        {footer && <div className=\"modal-footer\">{footer}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export const convertToAMPM = (timeString) => {\r\n  if (timeString === undefined) return \"00:00)\"\r\n    const [hours, minutes] = timeString.split(':');\r\n    let formattedTime = '';\r\n  \r\n    const date = new Date();\r\n    date.setHours(hours);\r\n    date.setMinutes(minutes);\r\n  \r\n    formattedTime = date.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true });\r\n  \r\n    return formattedTime;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import React, { useState } from \"react\";\r\nimport \"../../../shared/settings.css\";\r\nimport { AiFillEdit, AiFillClockCircle } from \"react-icons/ai\";\r\nimport AdminSettingsHeader from \"../../../components/AdminSettingsHeader\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { Button, FormGroup, Input } from \"mtforms\";\r\nimport { useGetSettingById, useGetSettings, useUpdateSettings } from \"../hooks\";\r\nimport { toast } from \"react-toastify\";\r\nimport { errorAlert, toastOptions } from \"../../../utils\";\r\nimport { convertToAMPM } from \"./util\";\r\nimport Layout from \"../../../layout\";\r\n\r\nconst Users = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const { data: settingsID } = useGetSettings();\r\n  const ID = settingsID && settingsID[0].id;\r\n  const { data } = useGetSettingById(ID);\r\n\r\n  const openHandler = () => {\r\n    setOpen(true);\r\n    setFormData(data?.data);\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const { mutate, isError, isSuccess, reset, error } = useUpdateSettings();\r\n\r\n  const submitHandler = () => {\r\n    const newData = { ...formData, id: data?.data?.id };\r\n    mutate(newData);\r\n  };\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccess) {\r\n    reset();\r\n    setOpen(false);\r\n    toast.success(`Time Updated Successfully`, toastOptions);\r\n  }\r\n\r\n  console.log({ formData });\r\n  return (\r\n    <Layout name=\"Settings\" title=\"Settings\">\r\n      <div className=\"settings_container\">\r\n        <div className=\"settings_container_layout\">\r\n          <div className=\"setting_container\">\r\n            <AdminSettingsHeader time={\"remote\"} />\r\n            <div className=\"title\">\r\n              <span className=\"ams__icon\">\r\n                <AiFillClockCircle />\r\n              </span>\r\n              Office Hours\r\n              <span className=\"companyName\">\r\n                <AiFillEdit className=\"ams__icon_btns\" onClick={openHandler} />\r\n              </span>\r\n            </div>\r\n            <div className=\"title\">\r\n              <h5>Opening Time : {convertToAMPM(data?.data?.opens)} </h5>\r\n              <h5>Closing Time : {convertToAMPM(data?.data?.closes)} </h5>\r\n              <h5>\r\n                Clock In Window : {data?.data?.opening_window || 0} Minutes{\" \"}\r\n              </h5>\r\n              <h5>\r\n                Clock Out Window : {data?.data?.closing_window || 0} Minutes{\" \"}\r\n              </h5>\r\n            </div>\r\n            <Modal\r\n              isVisible={open}\r\n              title={\"\"}\r\n              size=\"md\"\r\n              content={\r\n                <div className=\"modal_form_container\">\r\n                  <FormGroup\r\n                    onSubmit={submitHandler}\r\n                    validation={formData}\r\n                    errors={errors}\r\n                    setErrors={setErrors}\r\n                  >\r\n                    <Input\r\n                      name=\"opens\"\r\n                      label=\"Opening Time\"\r\n                      value={formData[\"opens\"]}\r\n                      onChange={handleChange}\r\n                      type=\"time\"\r\n                      validationHandler={validationHandler}\r\n                      error={errors.opens}\r\n                      required={true}\r\n                      readOnly={true}\r\n                      size=\"large\"\r\n                      className=\"formInput\"\r\n                    />\r\n\r\n                    <Input\r\n                      name=\"closes\"\r\n                      label=\"Closing Time\"\r\n                      value={formData[\"closes\"]}\r\n                      onChange={handleChange}\r\n                      type=\"time\"\r\n                      validationHandler={validationHandler}\r\n                      error={errors.closes}\r\n                      required={true}\r\n                      readOnly={true}\r\n                      size=\"large\"\r\n                      className=\"formInput\"\r\n                    />\r\n\r\n                    <Input\r\n                      name=\"opening_window\"\r\n                      label=\"Clock In Window (Mins)\"\r\n                      value={formData[\"opening_window\"]}\r\n                      onChange={handleChange}\r\n                      type=\"number\"\r\n                      validationHandler={validationHandler}\r\n                      error={errors.opening_window}\r\n                      required={true}\r\n                      readOnly={true}\r\n                      size=\"large\"\r\n                      className=\"formInput\"\r\n                    />\r\n\r\n                    <Input\r\n                      name=\"closing_window\"\r\n                      label=\"Clock Out Window (Mins)\"\r\n                      value={formData[\"closing_window\"]}\r\n                      onChange={handleChange}\r\n                      type=\"number\"\r\n                      validationHandler={validationHandler}\r\n                      error={errors.closing_window}\r\n                      required={true}\r\n                      readOnly={true}\r\n                      size=\"large\"\r\n                      className=\"formInput\"\r\n                    />\r\n\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      title=\"Save\"\r\n                      className=\"formButton\"\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              }\r\n              onClose={() => setOpen(false)}\r\n              footer=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["props","_jsx","className","children","_jsxs","time","Link","to","PrivatePaths","location","authentication","_ref","_ref$isVisible","isVisible","title","content","footer","onClose","_ref$size","size","keydownHandler","_ref2","key","useEffect","document","addEventListener","removeEventListener","onClick","concat","e","stopPropagation","convertToAMPM","timeString","undefined","_timeString$split","split","_timeString$split2","_slicedToArray","hours","minutes","date","Date","setHours","setMinutes","toLocaleTimeString","hour","minute","hour12","_data$data2","_data$data3","_data$data4","_data$data5","_useState","useState","_useState2","open","setOpen","_useState3","_useState4","formData","setFormData","_useState5","_useState6","errors","setErrors","settingsID","useGetSettings","data","ID","id","useGetSettingById","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","error","_useUpdateSettings","useUpdateSettings","mutate","isError","isSuccess","reset","errorAlert","toast","toastOptions","console","log","Layout","AdminSettingsHeader","AiFillClockCircle","AiFillEdit","opens","closes","opening_window","closing_window","Modal","FormGroup","onSubmit","_data$data","newData","validation","Input","label","onChange","type","required","readOnly","Button"],"sourceRoot":""}