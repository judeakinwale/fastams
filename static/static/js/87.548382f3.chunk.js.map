{"version":3,"file":"static/js/87.548382f3.chunk.js","mappings":"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","sources":["components/AdminSettingsHeader/index.jsx","modules/Admin/Report/column.js","modules/Admin/Settings/location.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PrivatePaths } from \"../../routes/path\";\r\nimport \"./styles.css\";\r\n\r\nconst AdminSettingsHeader = (props) => {\r\n\treturn (\r\n\t\t<div className=\"menubar\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li className={props.time}>\r\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS}> Time</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={props.location}>\r\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS_LOCATION}>\r\n\t\t\t\t\t\tLocation\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li className={props.authentication}>\r\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS_AUTHENTICATION}>\r\n\t\t\t\t\t\tAuthentication\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AdminSettingsHeader;\r\n","export const columns = [\r\n  // { title: \"S/N\", field: \"Tableid\",render: (rowData) => rowData.tableData.id + 1},\r\n  { title: \"First Name\", field: \"user.first_name\" },\r\n  { title: \"Last Name\", field: \"user.last_name\" },\r\n  { title: \"Email\", field: \"email\" },\r\n  {\r\n    title: \"Check In Time\",\r\n    field: \"created_at\",\r\n    render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\r\n  },\r\n  {\r\n    title: \"Check Out Time\",\r\n    field: \"updated_at\",\r\n    render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\r\n  },\r\n];\r\n\r\nexport const single_columns = [\r\n  { title: \"Email\", field: \"email\" },\r\n  {\r\n    title: \"Check In Time\",\r\n    field: \"created_at\",\r\n    render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\r\n  },\r\n  {\r\n    title: \"Check Out Time\",\r\n    field: \"updated_at\",\r\n    render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\r\n  },\r\n];\r\n\r\nexport const location_columns = [\r\n  { title: \"Name\", field: \"name\" },\r\n\r\n  { title: \"Address\", field: \"address\" },\r\n  { title: \"Latitude\", field: \"latitude\" },\r\n  { title: \"Longitude\", field: \"longitude\" },\r\n  { title: \"Radius\", field: \"radius\" },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"../../../shared/settings.css\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { GoLocation } from \"react-icons/go\";\r\n\r\nimport AdminSettingsHeader from \"../../../components/AdminSettingsHeader\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { Button, FormGroup, Input, Table } from \"mtforms\";\r\nimport {\r\n  useAddLocation,\r\n  useDeleteLocation,\r\n  useGetLocation,\r\n  useUpdateLocation,\r\n} from \"../hooks\";\r\nimport { toast } from \"react-toastify\";\r\nimport { errorAlert, toastOptions } from \"../../../utils\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { location_columns } from \"../Report/column\";\r\nimport swal from \"sweetalert\";\r\nimport Layout from \"../../../layout\";\r\n\r\nconst Users = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const isLoading = useIsMutating();\r\n\r\n  const { data } = useGetLocation();\r\n\r\n  const { mutate, isError, isSuccess, reset, error } = useUpdateLocation();\r\n  const {\r\n    mutate: addLocation,\r\n    isError: addError,\r\n    isSuccess: isSuccessAdd,\r\n    reset: resetAdd,\r\n    error: errorAdd,\r\n  } = useAddLocation();\r\n\r\n  const getLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      setErrors({\r\n        ...errors,\r\n        location: \"Geolocation is not supported by your browser\",\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setFormData({\r\n            ...formData,\r\n            longitude: position.coords.longitude.toString(),\r\n            latitude: position.coords.latitude.toString(),\r\n          });\r\n          setLoading(false);\r\n        },\r\n\r\n        () => {\r\n          setErrors({\r\n            ...errors,\r\n            location: \"Unable to retrieve your location\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const actions = (item) => [\r\n    {\r\n      name: \"Edit\",\r\n      onClick: (res) => {\r\n        setFormData(res);\r\n        setEdit(true);\r\n\r\n        setOpen(true);\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete Location\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"Once deleted, you will not be able to recover this\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            remove(res.id);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  const currentLocation = () => {\r\n    getLocation();\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    if (edit === true) {\r\n      mutate(formData);\r\n    } else {\r\n      addLocation(formData);\r\n    }\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setOpen(false);\r\n    setFormData({});\r\n    setEdit(false);\r\n  };\r\n\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccess) {\r\n    reset();\r\n    setOpen(false);\r\n    setFormData({});\r\n    setEdit(false);\r\n    toast.success(`Location Updated Successfully`, toastOptions);\r\n  }\r\n\r\n  if (addError) {\r\n    resetAdd();\r\n    errorAlert(errorAdd);\r\n  }\r\n  if (isSuccessAdd) {\r\n    setFormData({});\r\n    setOpen(false);\r\n\r\n    resetAdd();\r\n  }\r\n\r\n  const {\r\n    mutate: remove,\r\n    isError: isEDelete,\r\n    isSuccess: isSDelete,\r\n    reset: eReset,\r\n    error: Error,\r\n  } = useDeleteLocation();\r\n\r\n  if (isEDelete) {\r\n    eReset();\r\n\r\n    errorAlert(Error);\r\n  }\r\n  if (isSDelete) {\r\n    eReset();\r\n    toast.success(`Location Deleted Successfully`, toastOptions);\r\n  }\r\n\r\n  const openHandler = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  return (\r\n    <Layout name=\"Settings\" title=\"Settings\">\r\n      <div className=\"settings_container\">\r\n        <div className=\"settings_container_layout\">\r\n          <div className=\"setting_container\">\r\n            <AdminSettingsHeader location={\"remote\"} />\r\n            <div className=\"title\">\r\n              <span className=\"ams__icon\">\r\n                <GoLocation />\r\n              </span>\r\n              Office Location\r\n              <span className=\"companyName\">\r\n                <AiFillEdit className=\"ams__icon_btns\" onClick={openHandler} />\r\n              </span>\r\n            </div>\r\n            <div className=\"title\">\r\n              <Table\r\n                columns={location_columns}\r\n                data={data}\r\n                actions={actions}\r\n                selectID=\"id\"\r\n                showFilter\r\n              />\r\n            </div>\r\n            <Modal\r\n              isVisible={open}\r\n              title={\"\"}\r\n              size=\"md\"\r\n              content={\r\n                <div className=\"modal_form_container\">\r\n                  {loading ? (\r\n                    \"fetching your current location\"\r\n                  ) : (\r\n                    <FormGroup\r\n                      validation={formData}\r\n                      errors={errors}\r\n                      setErrors={setErrors}\r\n                      className=\"Form\"\r\n                    >\r\n                      <Input\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        value={formData[\"name\"]}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        validationHandler={validationHandler}\r\n                        error={errors.name}\r\n                        required={true}\r\n                        readOnly={true}\r\n                        size=\"large\"\r\n                        className=\"formInput\"\r\n                      />\r\n                      <Input\r\n                        name=\"phone\"\r\n                        label=\"Phone\"\r\n                        value={formData[\"phone\"]}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        validationHandler={validationHandler}\r\n                        error={errors.phone}\r\n                        required={true}\r\n                        readOnly={true}\r\n                        size=\"large\"\r\n                        className=\"formInput\"\r\n                      />\r\n                      <Input\r\n                        name=\"latitude\"\r\n                        label=\"Latitude\"\r\n                        value={formData[\"latitude\"]}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        validationHandler={validationHandler}\r\n                        error={errors.latitude}\r\n                        required={true}\r\n                        readOnly={true}\r\n                        size=\"large\"\r\n                        className=\"formInput\"\r\n                      />\r\n\r\n                      <Input\r\n                        name=\"longitude\"\r\n                        label=\"Longitude\"\r\n                        value={formData[\"longitude\"]}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        validationHandler={validationHandler}\r\n                        error={errors.longitude}\r\n                        required={true}\r\n                        readOnly={true}\r\n                        size=\"large\"\r\n                        className=\"formInput\"\r\n                      />\r\n\r\n                      <Input\r\n                        name=\"radius\"\r\n                        label=\"Radius\"\r\n                        value={formData[\"radius\"]}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        validationHandler={validationHandler}\r\n                        error={errors.radius}\r\n                        required={true}\r\n                        readOnly={true}\r\n                        size=\"large\"\r\n                        className=\"formInput\"\r\n                      />\r\n\r\n                      <Input\r\n                        name=\"address\"\r\n                        label=\"address\"\r\n                        value={formData[\"address\"]}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        validationHandler={validationHandler}\r\n                        error={errors.address}\r\n                        required={true}\r\n                        readOnly={true}\r\n                        size=\"large\"\r\n                        className=\"formInput\"\r\n                      />\r\n\r\n                      <Button\r\n                        size=\"large\"\r\n                        type=\"button\"\r\n                        onClick={currentLocation}\r\n                        title={isLoading ? \"..loading\" : \"Use Current Location\"}\r\n                        disabled={isLoading ? true : false}\r\n                        className=\"formButton\"\r\n                      />\r\n                      <Button\r\n                        size=\"large\"\r\n                        onClick={submitHandler}\r\n                        title={isLoading ? \"submitting\" : \"Save\"}\r\n                        disabled={isLoading ? true : false}\r\n                        className=\"formButton\"\r\n                      />\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              }\r\n              onClose={closeHandler}\r\n              footer=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["props","_jsx","className","children","_jsxs","time","Link","to","PrivatePaths","location","authentication","columns","title","field","render","rowData","created_at","replace","slice","single_columns","location_columns","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","edit","setEdit","_useState5","_useState6","loading","setLoading","_useState7","_useState8","formData","setFormData","_useState9","_useState10","errors","setErrors","isLoading","useIsMutating","data","useGetLocation","_useUpdateLocation","useUpdateLocation","mutate","isError","isSuccess","reset","error","_useAddLocation","useAddLocation","addLocation","addError","isSuccessAdd","resetAdd","errorAdd","errorAlert","toast","toastOptions","_useDeleteLocation","useDeleteLocation","remove","isEDelete","isSDelete","eReset","Error","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","Layout","AdminSettingsHeader","GoLocation","AiFillEdit","onClick","Table","actions","item","res","swal","text","icon","buttons","dangerMode","then","willDelete","id","selectID","showFilter","Modal","isVisible","size","content","FormGroup","validation","Input","label","onChange","type","required","readOnly","phone","latitude","longitude","radius","address","Button","navigator","geolocation","getCurrentPosition","position","coords","toString","disabled","onClose","footer"],"sourceRoot":""}