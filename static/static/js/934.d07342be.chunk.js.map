{"version":3,"file":"static/js/934.d07342be.chunk.js","mappings":"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","sources":["axios-Instance/index.js","axios-Instance/constants.js","modules/Auth/ForgotPassword/hooks/index.js","modules/Auth/ForgotPassword/index.js","../node_modules/@tanstack/react-query/src/useIsMutating.ts"],"sourcesContent":["import axios from \"axios\";\nimport { baseURL } from \"./constants\";\n\nconst config = { baseURL: baseURL };\nexport const axiosInstance = axios.create(config);\n","// export const baseURL = \"https://pyams.azurewebsites.net/api/v1\";\nexport const baseURL = \"https://impactlife.azurewebsites.net/api/v1\";\n// export const baseURL = \"https://qrcodeattendance.azurewebsites.net/api\";\n","import { axiosInstance } from \"../../../../axios-Instance\";\nimport { useMutation } from \"@tanstack/react-query\";\n\nasync function forgetPassword(formData) {\n\tconst data = await axiosInstance({\n\t\turl: `/auth/forgot-password?email=${formData.email}`,\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\treturn data?.data;\n}\n\nexport function useForgetPassword() {\n\tconst { mutate, isError, error, isSuccess, reset } = useMutation({\n\t\tmutationFn: (formData) => forgetPassword(formData),\n\t});\n\treturn { mutate, isError, error, isSuccess, reset };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useIsMutating } from \"@tanstack/react-query\";\nimport { Button, FormGroup, Input } from \"mtforms\";\nimport { errorAlert, successAlert } from \"../../../utils\";\nimport { PublicPaths } from \"../../../routes/path\";\nimport { useForgetPassword } from \"./hooks\";\n\nconst ForgotPassword = () => {\n\tconst navigate = useNavigate();\n\tconst [formData, setFormData] = useState({});\n\tconst [errors, setErrors] = useState({});\n\tconst {\n\t\tmutate,\n\t\tisError,\n\t\tisSuccess,\n\t\terror: forgetPasswordError,\n\t\treset,\n\t} = useForgetPassword();\n\tconst isLoading = useIsMutating();\n\n\tconst handleChange = (name, value) => {\n\t\tsetFormData({ ...formData, [name]: value });\n\t};\n\n\tconst validationHandler = (name, error) => {\n\t\tsetErrors({ ...errors, [name]: error });\n\t};\n\n\tconst submitHandler = () => {\n\t\tmutate(formData);\n\t};\n\n\tuseEffect(() => {\n\t\tif (isSuccess) {\n\t\t\treset();\n\t\t\tsuccessAlert(\n\t\t\t\t\"Password Reset Successfully. Check your mail for reset token\"\n\t\t\t);\n\t\t\tnavigate(PublicPaths.HOME);\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isSuccess]);\n\n\tif (isError) {\n\t\treset();\n\t\terrorAlert(forgetPasswordError);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Forget Password</h1>\n\t\t\t<FormGroup onSubmit={submitHandler}>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\tvalue={formData[\"email\"]}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalidationHandler={validationHandler}\n\t\t\t\t\terror={errors.email}\n\t\t\t\t\trequired={true}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"submit\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tclassName={isLoading ? \"btn-disabled\" : \"\"}\n\t\t\t\t\tloading={isLoading === 1}\n\t\t\t\t\tdisabled={isLoading === 1}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n\nexport default ForgotPassword;\n","'use client'\nimport * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationKey, MutationFilters } from '@tanstack/query-core'\nimport { notifyManager, parseMutationFilterArgs } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\nimport { useQueryClient } from './QueryClientProvider'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsMutating(\n  filters?: MutationFilters,\n  options?: Options,\n): number\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n  options?: Options,\n): number\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'> | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3)\n\n  const queryClient = useQueryClient({ context: options.context })\n  const mutationCache = queryClient.getMutationCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [mutationCache],\n    ),\n    () => queryClient.isMutating(filters),\n    () => queryClient.isMutating(filters),\n  )\n}\n"],"names":["config","baseURL","axiosInstance","axios","_forgetPassword","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","data","wrap","_context","prev","next","url","concat","email","method","headers","sent","abrupt","stop","apply","arguments","useForgetPassword","_useMutation","useMutation","mutationFn","_x","forgetPassword","mutate","isError","error","isSuccess","reset","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","setFormData","_useState3","_useState4","errors","setErrors","_useForgetPassword","forgetPasswordError","isLoading","useIsMutating","useEffect","successAlert","PublicPaths","errorAlert","_jsxs","_Fragment","children","_jsx","FormGroup","onSubmit","Input","name","label","value","onChange","_objectSpread","_defineProperty","type","validationHandler","required","size","Button","title","className","loading","disabled","arg1","arg2","arg3","_parseMutationFilterA","parseMutationFilterArgs","_parseMutationFilterA2","filters","_parseMutationFilterA3","options","mutationCache","queryClient","getMutationCache","useSyncExternalStore","React","onStoreChange","subscribe","notifyManager","isMutating"],"sourceRoot":""}