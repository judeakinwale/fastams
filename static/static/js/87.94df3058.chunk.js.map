{"version":3,"file":"static/js/87.94df3058.chunk.js","mappings":"4KA6BA,EAxB4B,SAACA,GAC5B,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACvBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAIC,UAAWF,EAAMK,KAAKF,UACzBF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAIC,EAAAA,GAAAA,eAA4BL,SAAC,aAExCF,EAAAA,EAAAA,KAAA,MAAIC,UAAWF,EAAMS,SAASN,UAC7BF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAIC,EAAAA,GAAAA,wBAAqCL,SAAC,gBAKjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAWF,EAAMU,eAAeP,UACnCF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAIC,EAAAA,GAAAA,8BAA2CL,SAAC,yBAQ3D,C,uBC3BO,SAASQ,EAAUC,GACxB,GAAKA,EAaL,OAZAA,EAAO,IAAIC,KAAKD,IAWOE,cAAcC,QAAQ,KAAM,IAMrD,C,iFACO,IAAMC,EAAU,CAErB,CAAEC,MAAO,aAAcC,MAAO,mBAC9B,CAAED,MAAO,YAAaC,MAAO,kBAC7B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,WAAYC,MAAO,iBAC5B,CACED,MAAO,gBACPC,MAAO,aAEPC,OAAQ,SAACC,GAAO,OAAKT,EAAiB,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAASC,WAAW,GAErD,CACEJ,MAAO,iBACPC,MAAO,aAEPC,OAAQ,SAACC,GAAO,OAAKT,EAAiB,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAASE,WAAW,IAI1CC,EAAiB,CAC5B,CAAEN,MAAO,QAASC,MAAO,SACzB,CACED,MAAO,gBACPC,MAAO,aAEPC,OAAQ,SAACC,GAAO,OAAKT,EAAiB,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAASC,WAAW,GAErD,CACEJ,MAAO,iBACPC,MAAO,aAEPC,OAAQ,SAACC,GAAO,OAAKT,EAAiB,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAASE,WAAW,IAI1CE,EAAmB,CAC9B,CAAEP,MAAO,OAAQC,MAAO,QAExB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,SAAUC,MAAO,U,6NCgQ5B,UAzSc,WACZ,IAAAO,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEpBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAgCb,EAAAA,EAAAA,UAAS,CAAC,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA4BjB,EAAAA,EAAAA,UAAS,CAAC,GAAEkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAYC,EAAAA,EAAAA,KAEVC,GAASC,EAAAA,EAAAA,MAATD,KAERE,GAAqDC,EAAAA,EAAAA,MAA7CC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAAOC,EAAKN,EAALM,MAC3CC,GAMIC,EAAAA,EAAAA,MALMC,EAAWF,EAAnBL,OACSQ,EAAQH,EAAjBJ,QACWQ,EAAYJ,EAAvBH,UACOQ,EAAQL,EAAfF,MACOQ,EAAQN,EAAfD,MA+EEH,IACFE,KACAS,EAAAA,EAAAA,IAAWR,IAETF,IACFC,IACA1B,GAAQ,GACRY,EAAY,CAAC,GACbR,GAAQ,GACRgC,EAAAA,GAAAA,QAAc,gCAAiCC,EAAAA,KAG7CN,IACFE,KACAE,EAAAA,EAAAA,IAAWD,IAETF,IACFpB,EAAY,CAAC,GACbZ,GAAQ,GAERiC,KAGF,IAAAK,GAMIC,EAAAA,EAAAA,MALMC,EAAMF,EAAdf,OACSkB,EAASH,EAAlBd,QACWkB,GAASJ,EAApBb,UACOkB,GAAML,EAAbZ,MACOkB,GAAKN,EAAZX,MAGEc,IACFE,MAEAR,EAAAA,EAAAA,IAAWS,KAETF,KACFC,KACAP,EAAAA,GAAAA,QAAc,gCAAiCC,EAAAA,KAGjD,IAGMQ,GAAe,SAACC,EAAMC,GAC1BnC,GAAWoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIrC,GAAQ,IAAAsC,EAAAA,EAAAA,GAAA,GAAGH,EAAOC,IACrC,EACMG,GAAoB,SAACJ,EAAMnB,GAC/BX,GAASgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjC,GAAM,IAAAkC,EAAAA,EAAAA,GAAA,GAAGH,EAAOnB,IACjC,EAEA,OACExD,EAAAA,EAAAA,KAACgF,EAAAA,EAAM,CAACL,KAAK,WAAW3D,MAAM,WAAUd,UACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACiF,EAAAA,EAAmB,CAACzE,SAAU,YAC/BL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAACkF,EAAAA,IAAU,MACN,mBAEPlF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,UAC3BF,EAAAA,EAAAA,KAACmF,EAAAA,IAAU,CAAClF,UAAU,iBAAiBmF,QAtBjC,WAClBvD,GAAQ,EACV,UAuBU7B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAACqF,EAAAA,GAAK,CACJtE,QAASQ,EAAAA,GACTyB,KAAMA,EACNsC,QAtHE,SAACC,GAAI,MAAK,CACxB,CACEZ,KAAM,OACNS,QAAS,SAACI,GACR/C,EAAY+C,GACZvD,GAAQ,GAERJ,GAAQ,EACV,GAEF,CACE8C,KAAM,kBACNS,QAAS,SAACI,GACRC,IAAK,CACHzE,MAAO,gBACP0E,KAAM,qDACNC,KAAM,UAENC,SAAS,EACTC,YAAY,IACXC,MAAK,SAACC,GACHA,GACF1B,EAAOmB,EAAIQ,GAEf,GACF,GAEF,EA4FYC,SAAS,KACTC,YAAU,OAGdlG,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CACJC,UAAWxE,EACXZ,MAAO,GACPqF,KAAK,KACLC,SACEtG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAClCkC,EACC,kCAEAjC,EAAAA,EAAAA,MAACoG,EAAAA,GAAS,CACRC,WAAYhE,EACZI,OAAQA,EACRC,UAAWA,EACX5C,UAAU,OAAMC,SAAA,EAEhBF,EAAAA,EAAAA,KAACyG,EAAAA,GAAK,CACJ9B,KAAK,OACL+B,MAAM,OACN9B,MAAOpC,EAAe,KACtBmE,SAAUjC,GACVkC,KAAK,OACL7B,kBAAmBA,GACnBvB,MAAOZ,EAAO+B,KACdkC,UAAU,EACVC,UAAU,EACVT,KAAK,QACLpG,UAAU,eAEZD,EAAAA,EAAAA,KAACyG,EAAAA,GAAK,CACJ9B,KAAK,QACL+B,MAAM,QACN9B,MAAOpC,EAAgB,MACvBmE,SAAUjC,GACVkC,KAAK,OACL7B,kBAAmBA,GACnBvB,MAAOZ,EAAOmE,MACdF,UAAU,EACVC,UAAU,EACVT,KAAK,QACLpG,UAAU,eAEZD,EAAAA,EAAAA,KAACyG,EAAAA,GAAK,CACJ9B,KAAK,WACL+B,MAAM,WACN9B,MAAOpC,EAAmB,SAC1BmE,SAAUjC,GACVkC,KAAK,OACL7B,kBAAmBA,GACnBvB,MAAOZ,EAAOoE,SACdH,UAAU,EACVC,UAAU,EACVT,KAAK,QACLpG,UAAU,eAGZD,EAAAA,EAAAA,KAACyG,EAAAA,GAAK,CACJ9B,KAAK,YACL+B,MAAM,YACN9B,MAAOpC,EAAoB,UAC3BmE,SAAUjC,GACVkC,KAAK,OACL7B,kBAAmBA,GACnBvB,MAAOZ,EAAOqE,UACdJ,UAAU,EACVC,UAAU,EACVT,KAAK,QACLpG,UAAU,eAGZD,EAAAA,EAAAA,KAACyG,EAAAA,GAAK,CACJ9B,KAAK,SACL+B,MAAM,SACN9B,MAAOpC,EAAiB,OACxBmE,SAAUjC,GACVkC,KAAK,OACL7B,kBAAmBA,GACnBvB,MAAOZ,EAAOsE,OACdL,UAAU,EACVC,UAAU,EACVT,KAAK,QACLpG,UAAU,eAGZD,EAAAA,EAAAA,KAACyG,EAAAA,GAAK,CACJ9B,KAAK,UACL+B,MAAM,UACN9B,MAAOpC,EAAkB,QACzBmE,SAAUjC,GACVkC,KAAK,OACL7B,kBAAmBA,GACnBvB,MAAOZ,EAAOuE,QACdN,UAAU,EACVC,UAAU,EACVT,KAAK,QACLpG,UAAU,eAGZD,EAAAA,EAAAA,KAACoH,EAAAA,GAAM,CACLf,KAAK,QACLO,KAAK,SACLxB,QAlME,WAxDjBiC,UAAUC,aAMbjF,GAAW,GACXgF,UAAUC,YAAYC,oBACpB,SAACC,GACC/E,GAAWoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRrC,GAAQ,IACXyE,UAAWO,EAASC,OAAOR,UAAUS,WACrCV,SAAUQ,EAASC,OAAOT,SAASU,cAErCrF,GAAW,EACb,IAEA,WACEQ,GAASgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNjC,GAAM,IACTpC,SAAU,qCAEd,KArBFqC,GAASgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNjC,GAAM,IACTpC,SAAU,iDAuDhB,EAiMsBQ,MAAO8B,EAAY,YAAc,uBACjC6E,WAAU7E,EACV7C,UAAU,gBAEZD,EAAAA,EAAAA,KAACoH,EAAAA,GAAM,CACLf,KAAK,QACLjB,QArMA,YACP,IAATpD,EACFoB,EAAOZ,GAEPmB,EAAYnB,EAEhB,EAgMsBxB,MAAO8B,EAAY,aAAe,OAClC6E,WAAU7E,EACV7C,UAAU,oBAMpB2H,QAtMS,WACnB/F,GAAQ,GACRY,EAAY,CAAC,GACbR,GAAQ,GACRI,GAAW,EACb,EAkMYwF,OAAO,aAOrB,C","sources":["components/AdminSettingsHeader/index.jsx","modules/Admin/Report/column.js","modules/Admin/Settings/location.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PrivatePaths } from \"../../routes/path\";\nimport \"./styles.css\";\n\nconst AdminSettingsHeader = (props) => {\n\treturn (\n\t\t<div className=\"menubar\">\n\t\t\t<ul>\n\t\t\t\t<li className={props.time}>\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS}> Time</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className={props.location}>\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS_LOCATION}>\n\t\t\t\t\t\tLocation\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\n\t\t\t\t<li className={props.authentication}>\n\t\t\t\t\t<Link to={PrivatePaths.ADMIN_SETTINGS_AUTHENTICATION}>\n\t\t\t\t\t\tAuthentication\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default AdminSettingsHeader;\n","export function parseDate(date) {\n  if (!date) return;\n  date = new Date(date);\n  // Request a weekday along with a long date\n  // const options = {\n  //   timezone: \"UTC\"\n  //   // weekday: \"long\",\n  //   // year: \"numeric\",\n  //   // month: \"long\",\n  //   // day: \"numeric\",\n  // };\n  // console.log(date.toLocaleString(\"de-DE\", options));\n  // return date.toUTCString();\n  const fixedDate = date.toUTCString().replace(/,/g, \" \");\n  return fixedDate;\n  // return date.toString(\"en-US\", { timezone: \"UTC\" });\n  // return date.toLocaleString(\"en-US\", { timezone: \"UTC\" });\n  // return `${date.toLocaleDateString(\"en-US\", {timezone: \"UTC\"})} - ${date.toLocaleTimeString(\"en-US\", {timezone: \"UTC\"})}`\n  // return `${date.toLocaleDateString(\"en-US\", {timezone: \"UTC\"})} - ${date.toLocaleTimeString(\"en-US\", {timezone: \"UTC\"})}`\n}\nexport const columns = [\n  // { title: \"S/N\", field: \"Tableid\",render: (rowData) => rowData.tableData.id + 1},\n  { title: \"First Name\", field: \"user.first_name\" },\n  { title: \"Last Name\", field: \"user.last_name\" },\n  { title: \"Email\", field: \"email\" },\n  { title: \"Location\", field: \"location.name\" },\n  {\n    title: \"Check In Time\",\n    field: \"created_at\",\n    // render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\n    render: (rowData) => parseDate(rowData?.created_at),\n  },\n  {\n    title: \"Check Out Time\",\n    field: \"updated_at\",\n    // render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\n    render: (rowData) => parseDate(rowData?.updated_at),\n  },\n];\n\nexport const single_columns = [\n  { title: \"Email\", field: \"email\" },\n  {\n    title: \"Check In Time\",\n    field: \"created_at\",\n    // render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\n    render: (rowData) => parseDate(rowData?.created_at),\n  },\n  {\n    title: \"Check Out Time\",\n    field: \"updated_at\",\n    // render: (rowData) => rowData.created_at.replace(\"T\", \" - \").slice(0, -10),\n    render: (rowData) => parseDate(rowData?.updated_at),\n  },\n];\n\nexport const location_columns = [\n  { title: \"Name\", field: \"name\" },\n\n  { title: \"Address\", field: \"address\" },\n  { title: \"Latitude\", field: \"latitude\" },\n  { title: \"Longitude\", field: \"longitude\" },\n  { title: \"Radius\", field: \"radius\" },\n];\n","import React, { useState } from \"react\";\nimport \"../../../shared/settings.css\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { GoLocation } from \"react-icons/go\";\n\nimport AdminSettingsHeader from \"../../../components/AdminSettingsHeader\";\nimport Modal from \"../../../components/Modal\";\nimport { Button, FormGroup, Input, Table } from \"mtforms\";\nimport {\n  useAddLocation,\n  useDeleteLocation,\n  useGetLocation,\n  useUpdateLocation,\n} from \"../hooks\";\nimport { toast } from \"react-toastify\";\nimport { errorAlert, toastOptions } from \"../../../utils\";\nimport { useIsMutating } from \"@tanstack/react-query\";\nimport { location_columns } from \"../Report/column\";\nimport swal from \"sweetalert\";\nimport Layout from \"../../../layout\";\n\nconst Users = () => {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const isLoading = useIsMutating();\n\n  const { data } = useGetLocation();\n\n  const { mutate, isError, isSuccess, reset, error } = useUpdateLocation();\n  const {\n    mutate: addLocation,\n    isError: addError,\n    isSuccess: isSuccessAdd,\n    reset: resetAdd,\n    error: errorAdd,\n  } = useAddLocation();\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setErrors({\n        ...errors,\n        location: \"Geolocation is not supported by your browser\",\n      });\n    } else {\n      setLoading(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setFormData({\n            ...formData,\n            longitude: position.coords.longitude.toString(),\n            latitude: position.coords.latitude.toString(),\n          });\n          setLoading(false);\n        },\n\n        () => {\n          setErrors({\n            ...errors,\n            location: \"Unable to retrieve your location\",\n          });\n        }\n      );\n    }\n  };\n\n  const actions = (item) => [\n    {\n      name: \"Edit\",\n      onClick: (res) => {\n        setFormData(res);\n        setEdit(true);\n\n        setOpen(true);\n      },\n    },\n    {\n      name: \"Delete Location\",\n      onClick: (res) => {\n        swal({\n          title: \"Are you sure?\",\n          text: \"Once deleted, you will not be able to recover this\",\n          icon: \"warning\",\n          //    @ts-ignore\n          buttons: true,\n          dangerMode: true,\n        }).then((willDelete) => {\n          if (willDelete) {\n            remove(res.id);\n          }\n        });\n      },\n    },\n  ];\n\n  const currentLocation = () => {\n    getLocation();\n  };\n\n  const submitHandler = () => {\n    if (edit === true) {\n      mutate(formData);\n    } else {\n      addLocation(formData);\n    }\n  };\n\n  const closeHandler = () => {\n    setOpen(false);\n    setFormData({});\n    setEdit(false);\n    setLoading(false);\n  };\n\n  if (isError) {\n    reset();\n    errorAlert(error);\n  }\n  if (isSuccess) {\n    reset();\n    setOpen(false);\n    setFormData({});\n    setEdit(false);\n    toast.success(`Location Updated Successfully`, toastOptions);\n  }\n\n  if (addError) {\n    resetAdd();\n    errorAlert(errorAdd);\n  }\n  if (isSuccessAdd) {\n    setFormData({});\n    setOpen(false);\n\n    resetAdd();\n  }\n\n  const {\n    mutate: remove,\n    isError: isEDelete,\n    isSuccess: isSDelete,\n    reset: eReset,\n    error: Error,\n  } = useDeleteLocation();\n\n  if (isEDelete) {\n    eReset();\n\n    errorAlert(Error);\n  }\n  if (isSDelete) {\n    eReset();\n    toast.success(`Location Deleted Successfully`, toastOptions);\n  }\n\n  const openHandler = () => {\n    setOpen(true);\n  };\n  const handleChange = (name, value) => {\n    setFormData({ ...formData, [name]: value });\n  };\n  const validationHandler = (name, error) => {\n    setErrors({ ...errors, [name]: error });\n  };\n\n  return (\n    <Layout name=\"Settings\" title=\"Settings\">\n      <div className=\"settings_container\">\n        <div className=\"settings_container_layout\">\n          <div className=\"setting_container\">\n            <AdminSettingsHeader location={\"remote\"} />\n            <div className=\"title\">\n              <span className=\"ams__icon\">\n                <GoLocation />\n              </span>\n              Office Location\n              <span className=\"companyName\">\n                <AiFillEdit className=\"ams__icon_btns\" onClick={openHandler} />\n              </span>\n            </div>\n            <div className=\"title\">\n              <Table\n                columns={location_columns}\n                data={data}\n                actions={actions}\n                selectID=\"id\"\n                showFilter\n              />\n            </div>\n            <Modal\n              isVisible={open}\n              title={\"\"}\n              size=\"md\"\n              content={\n                <div className=\"modal_form_container\">\n                  {loading ? (\n                    \"fetching your current location\"\n                  ) : (\n                    <FormGroup\n                      validation={formData}\n                      errors={errors}\n                      setErrors={setErrors}\n                      className=\"Form\"\n                    >\n                      <Input\n                        name=\"name\"\n                        label=\"Name\"\n                        value={formData[\"name\"]}\n                        onChange={handleChange}\n                        type=\"text\"\n                        validationHandler={validationHandler}\n                        error={errors.name}\n                        required={true}\n                        readOnly={true}\n                        size=\"large\"\n                        className=\"formInput\"\n                      />\n                      <Input\n                        name=\"phone\"\n                        label=\"Phone\"\n                        value={formData[\"phone\"]}\n                        onChange={handleChange}\n                        type=\"text\"\n                        validationHandler={validationHandler}\n                        error={errors.phone}\n                        required={true}\n                        readOnly={true}\n                        size=\"large\"\n                        className=\"formInput\"\n                      />\n                      <Input\n                        name=\"latitude\"\n                        label=\"Latitude\"\n                        value={formData[\"latitude\"]}\n                        onChange={handleChange}\n                        type=\"text\"\n                        validationHandler={validationHandler}\n                        error={errors.latitude}\n                        required={true}\n                        readOnly={true}\n                        size=\"large\"\n                        className=\"formInput\"\n                      />\n\n                      <Input\n                        name=\"longitude\"\n                        label=\"Longitude\"\n                        value={formData[\"longitude\"]}\n                        onChange={handleChange}\n                        type=\"text\"\n                        validationHandler={validationHandler}\n                        error={errors.longitude}\n                        required={true}\n                        readOnly={true}\n                        size=\"large\"\n                        className=\"formInput\"\n                      />\n\n                      <Input\n                        name=\"radius\"\n                        label=\"Radius\"\n                        value={formData[\"radius\"]}\n                        onChange={handleChange}\n                        type=\"text\"\n                        validationHandler={validationHandler}\n                        error={errors.radius}\n                        required={true}\n                        readOnly={true}\n                        size=\"large\"\n                        className=\"formInput\"\n                      />\n\n                      <Input\n                        name=\"address\"\n                        label=\"address\"\n                        value={formData[\"address\"]}\n                        onChange={handleChange}\n                        type=\"text\"\n                        validationHandler={validationHandler}\n                        error={errors.address}\n                        required={true}\n                        readOnly={true}\n                        size=\"large\"\n                        className=\"formInput\"\n                      />\n\n                      <Button\n                        size=\"large\"\n                        type=\"button\"\n                        onClick={currentLocation}\n                        title={isLoading ? \"..loading\" : \"Use Current Location\"}\n                        disabled={isLoading ? true : false}\n                        className=\"formButton\"\n                      />\n                      <Button\n                        size=\"large\"\n                        onClick={submitHandler}\n                        title={isLoading ? \"submitting\" : \"Save\"}\n                        disabled={isLoading ? true : false}\n                        className=\"formButton\"\n                      />\n                    </FormGroup>\n                  )}\n                </div>\n              }\n              onClose={closeHandler}\n              footer=\"\"\n            />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Users;\n"],"names":["props","_jsx","className","children","_jsxs","time","Link","to","PrivatePaths","location","authentication","parseDate","date","Date","toUTCString","replace","columns","title","field","render","rowData","created_at","updated_at","single_columns","location_columns","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","edit","setEdit","_useState5","_useState6","loading","setLoading","_useState7","_useState8","formData","setFormData","_useState9","_useState10","errors","setErrors","isLoading","useIsMutating","data","useGetLocation","_useUpdateLocation","useUpdateLocation","mutate","isError","isSuccess","reset","error","_useAddLocation","useAddLocation","addLocation","addError","isSuccessAdd","resetAdd","errorAdd","errorAlert","toast","toastOptions","_useDeleteLocation","useDeleteLocation","remove","isEDelete","isSDelete","eReset","Error","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","Layout","AdminSettingsHeader","GoLocation","AiFillEdit","onClick","Table","actions","item","res","swal","text","icon","buttons","dangerMode","then","willDelete","id","selectID","showFilter","Modal","isVisible","size","content","FormGroup","validation","Input","label","onChange","type","required","readOnly","phone","latitude","longitude","radius","address","Button","navigator","geolocation","getCurrentPosition","position","coords","toString","disabled","onClose","footer"],"sourceRoot":""}