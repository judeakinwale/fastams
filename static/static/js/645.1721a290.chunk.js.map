{"version":3,"file":"static/js/645.1721a290.chunk.js","mappings":"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","sources":["components/Modal/index.jsx","modules/Admin/Users/column.js","modules/Admin/Users/index.js","../node_modules/@tanstack/react-query/src/useIsMutating.ts"],"sourcesContent":["import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport \"./modal.css\";\n\nconst Modal = ({\n  isVisible = false,\n  title,\n  content,\n  footer,\n  onClose,\n  size = \"md\",\n}) => {\n  const keydownHandler = ({ key }) => {\n    switch (key) {\n      case \"Escape\":\n        onClose();\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keydownHandler);\n    return () => document.removeEventListener(\"keydown\", keydownHandler);\n  });\n\n  return !isVisible ? null : (\n    <div className=\"modal\" onClick={onClose}>\n      <div className={`closeCon ${size}`}>\n        <span className=\"modal-close\" onClick={onClose}>\n          &times;\n        </span>\n      </div>\n\n      <div\n        className={`modal-dialog ${size}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\">{title}</h3>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"modal-content\">{content}</div>\n        </div>\n        {footer && <div className=\"modal-footer\">{footer}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export const columns = [\r\n  // { title: \"S/N\", field: \"Tableid\",render: (rowData) => rowData.tableData.id + 1},\r\n  { title: \"First Name\", field: \"first_name\" },\r\n  { title: \"Last Name\", field: \"last_name\" },\r\n  { title: \"Email\", field: \"email\" },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"../../../shared/report.css\";\r\nimport \"../../../shared/button.css\";\r\nimport \"../../../shared/settings.css\";\r\nimport { Table } from \"mtforms\";\r\nimport { columns } from \"./column\";\r\nimport {\r\n  useAddAdmin,\r\n  useDeleteUser,\r\n  useGetLocation,\r\n  useGetUsers,\r\n  useUpdateUser,\r\n} from \"../hooks\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { Button, FormGroup, Input, Select } from \"mtforms\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { errorAlert, toastOptions } from \"../../../utils\";\r\nimport swal from \"sweetalert\";\r\nimport { PrivatePaths } from \"../../../routes/path\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Layout from \"../../../layout\";\r\n\r\nconst Users = () => {\r\n  const { data } = useGetUsers();\r\n  const [user, setUser] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const { mutate, isSuccess, reset } = useAddAdmin();\r\n  const navigate = useNavigate();\r\n  const { data: locations } = useGetLocation();\r\n  // console.log(\"user:\",data)\r\n\r\n  // get admins from data\r\n  const admin = data?.filter((x) => x.is_admin === true);\r\n\r\n  const isLoading = useIsMutating();\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const {\r\n    mutate: remove,\r\n    isError: isEDelete,\r\n    isSuccess: isSDelete,\r\n    reset: eReset,\r\n    error: Error,\r\n  } = useDeleteUser();\r\n\r\n  if (isEDelete) {\r\n    eReset();\r\n\r\n    errorAlert(Error);\r\n  }\r\n  if (isSDelete) {\r\n    eReset();\r\n    toast.success(`User Deleted Successfully`, toastOptions);\r\n  }\r\n\r\n  const {\r\n    mutate: removeAdmin,\r\n    isError: isRemoveAdminErr,\r\n    isSuccess: isRemoveAdminSuccess,\r\n    reset: eRemoveAdminReset,\r\n    error: ErrorRA,\r\n  } = useUpdateUser();\r\n\r\n  const {\r\n    mutate: updateUser,\r\n    isError: isUpdateErr,\r\n    isSuccess: isUpdateSuccess,\r\n    reset: eUpdateReset,\r\n    error: updateError,\r\n  } = useUpdateUser();\r\n\r\n  if (isRemoveAdminErr) {\r\n    eRemoveAdminReset();\r\n\r\n    errorAlert(ErrorRA);\r\n  }\r\n  if (isRemoveAdminSuccess) {\r\n    eRemoveAdminReset();\r\n    toast.success(`Successful`, toastOptions);\r\n  }\r\n\r\n  if (isUpdateErr) {\r\n    eUpdateReset();\r\n\r\n    errorAlert(updateError);\r\n  }\r\n  if (isUpdateSuccess) {\r\n    eUpdateReset();\r\n    toast.success(`user updated successfully`, toastOptions);\r\n    setFormData({});\r\n    setOpenEdit(false);\r\n  }\r\n\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n\r\n  if (isSuccess) {\r\n    setFormData({});\r\n    setOpen(false);\r\n    reset();\r\n    toast.success(`Admin added Successfully`, toastOptions);\r\n  }\r\n\r\n  const editHandler = () => {\r\n    updateUser(formData);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setOpenEdit(false);\r\n    setFormData({});\r\n  };\r\n\r\n  const actions = (item) => [\r\n    {\r\n      name: \"Attendance History\",\r\n      onClick: (res) => {\r\n        navigate(`${PrivatePaths.ADMIN_USER_HISTORY}/${res.id}`);\r\n      },\r\n    },\r\n    {\r\n      name: \"Edit User\",\r\n      onClick: (res) => {\r\n        setFormData(res);\r\n        setOpenEdit(true);\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete User\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"Once deleted, you will not be able to recover this\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            remove(res.id);\r\n          }\r\n        });\r\n      },\r\n    },\r\n    {\r\n      name: \"Add as Admin\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"This user will have admin privilegde\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            const addAdminData = { ...formData, id: res.id, is_admin: true };\r\n            removeAdmin(addAdminData);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  const adminActions = (item) => [\r\n    {\r\n      name: \"Remove as Admin\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"This user will no longer have admin privilegde\",\r\n          icon: \"warning\",\r\n          //    @ts-ignore\r\n          buttons: true,\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            const addAdminData = { ...formData, id: res.id, is_admin: false };\r\n            removeAdmin(addAdminData);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Layout name=\"User\" title=\"Users\">\r\n      <div className=\"report_container\">\r\n        <div className=\"button_container\">\r\n          <button\r\n            className={user ? \"btn btnPurple\" : \"btn\"}\r\n            onClick={() => {\r\n              setUser(!user);\r\n            }}\r\n          >\r\n            All Staffs\r\n          </button>\r\n          <button\r\n            button\r\n            className={!user ? \"btn btnPurple\" : \"btn\"}\r\n            onClick={() => {\r\n              setUser(!user);\r\n            }}\r\n          >\r\n            Admins\r\n          </button>\r\n          {!user ? (\r\n            <button\r\n              button\r\n              className={\"btn btnGreenPry\"}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Add Admin\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"table_container\">\r\n          {user ? (\r\n            <Table\r\n              columns={columns}\r\n              data={data}\r\n              actions={actions}\r\n              selectID=\"id\"\r\n            />\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              data={admin}\r\n              actions={adminActions}\r\n              selectID=\"id\"\r\n            />\r\n          )}\r\n        </div>\r\n        <Modal\r\n          isVisible={open}\r\n          title={\"\"}\r\n          size=\"md\"\r\n          content={\r\n            <div className=\"modal_form_container\">\r\n              <FormGroup\r\n                onSubmit={submitHandler}\r\n                validation={formData}\r\n                errors={errors}\r\n                setErrors={setErrors}\r\n                className=\"Form\"\r\n              >\r\n                <Input\r\n                  name=\"first_name\"\r\n                  label=\"First Name\"\r\n                  value={formData[\"first_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.first_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Input\r\n                  name=\"last_name\"\r\n                  label=\"Last Name\"\r\n                  value={formData[\"last_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.last_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formData[\"email\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.email}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"location_id\"\r\n                  label=\"Location\"\r\n                  value={formData[\"location_id\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.location_id}\r\n                  required={true}\r\n                  data={locations}\r\n                  filter={\"name\"}\r\n                  filterValue={\"id\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"is_on_leave\"\r\n                  label=\"Is on Leave\"\r\n                  value={formData[\"is_on_leave\"]}\r\n                  onChange={handleChange}\r\n                  type=\"checkbox\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.is_on_leave}\r\n                  // required={true}\r\n                  data={[\r\n                    { name: \"True\", value: true },\r\n                    { name: \"False\", value: false },\r\n                  ]}\r\n                  filter={\"name\"}\r\n                  filterValue={\"value\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Button\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  title={isLoading ? \"loading..\" : \"Add\"}\r\n                  disabled={isLoading ? true : false}\r\n                  className=\"formButton btnPurple\"\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          }\r\n          onClose={() => setOpen(false)}\r\n          footer=\"\"\r\n        />\r\n\r\n        <Modal\r\n          isVisible={openEdit}\r\n          title={\"\"}\r\n          size=\"md\"\r\n          content={\r\n            <div className=\"modal_form_container\">\r\n              <FormGroup\r\n                onSubmit={editHandler}\r\n                validation={formData}\r\n                errors={errors}\r\n                setErrors={setErrors}\r\n                className=\"Form\"\r\n              >\r\n                <Input\r\n                  name=\"first_name\"\r\n                  label=\"First Name\"\r\n                  value={formData[\"first_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.first_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Input\r\n                  name=\"last_name\"\r\n                  label=\"Last Name\"\r\n                  value={formData[\"last_name\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.last_name}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formData[\"email\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.email}\r\n                  required={true}\r\n                  readOnly={true}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"location_id\"\r\n                  label=\"Location\"\r\n                  value={formData[\"location_id\"]}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.location_id}\r\n                  required={true}\r\n                  data={locations}\r\n                  filter={\"name\"}\r\n                  filterValue={\"id\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Select\r\n                  name=\"is_on_leave\"\r\n                  label=\"Is on Leave\"\r\n                  value={formData[\"is_on_leave\"]}\r\n                  onChange={handleChange}\r\n                  type=\"checkbox\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.is_on_leave}\r\n                  // required={true}\r\n                  data={[\r\n                    { name: \"True\", value: true },\r\n                    { name: \"False\", value: false },\r\n                  ]}\r\n                  filter={\"name\"}\r\n                  filterValue={\"value\"}\r\n                  size=\"large\"\r\n                  className=\"formInput\"\r\n                />\r\n\r\n                <Button\r\n                  size=\"large\"\r\n                  onClick={editHandler}\r\n                  type=\"button\"\r\n                  title={isLoading ? \"loading..\" : \"Save\"}\r\n                  disabled={isLoading ? true : false}\r\n                  className=\"formButton\"\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          }\r\n          onClose={closeHandler}\r\n          footer=\"\"\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","'use client'\nimport * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationKey, MutationFilters } from '@tanstack/query-core'\nimport { notifyManager, parseMutationFilterArgs } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\nimport { useQueryClient } from './QueryClientProvider'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsMutating(\n  filters?: MutationFilters,\n  options?: Options,\n): number\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n  options?: Options,\n): number\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'> | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3)\n\n  const queryClient = useQueryClient({ context: options.context })\n  const mutationCache = queryClient.getMutationCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [mutationCache],\n    ),\n    () => queryClient.isMutating(filters),\n    () => queryClient.isMutating(filters),\n  )\n}\n"],"names":["_ref","_ref$isVisible","isVisible","title","content","footer","onClose","_ref$size","size","keydownHandler","_ref2","key","useEffect","document","addEventListener","removeEventListener","_jsxs","className","onClick","children","_jsx","concat","e","stopPropagation","columns","field","data","useGetUsers","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","open","setOpen","_useState5","_useState6","formData","setFormData","_useState7","_useState8","openEdit","setOpenEdit","_useState9","_useState10","errors","setErrors","_useAddAdmin","useAddAdmin","mutate","isSuccess","reset","navigate","useNavigate","locations","useGetLocation","admin","filter","x","is_admin","isLoading","useIsMutating","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","error","_useDeleteUser","useDeleteUser","remove","isEDelete","isError","isSDelete","eReset","Error","errorAlert","toast","toastOptions","_useUpdateUser","useUpdateUser","removeAdmin","isRemoveAdminErr","isRemoveAdminSuccess","eRemoveAdminReset","ErrorRA","_useUpdateUser2","updateUser","isUpdateErr","isUpdateSuccess","eUpdateReset","updateError","editHandler","Layout","button","Table","actions","item","res","PrivatePaths","id","swal","text","icon","buttons","dangerMode","then","willDelete","addAdminData","selectID","Modal","FormGroup","onSubmit","validation","Input","label","onChange","type","first_name","required","readOnly","last_name","email","Select","location_id","filterValue","is_on_leave","Button","disabled","arg1","arg2","arg3","_parseMutationFilterA","parseMutationFilterArgs","_parseMutationFilterA2","filters","_parseMutationFilterA3","options","mutationCache","queryClient","getMutationCache","useSyncExternalStore","React","onStoreChange","subscribe","notifyManager","isMutating"],"sourceRoot":""}