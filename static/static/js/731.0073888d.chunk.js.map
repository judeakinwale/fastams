{"version":3,"file":"static/js/731.0073888d.chunk.js","mappings":"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","sources":["axios-Instance/index.js","axios-Instance/constants.js","modules/Auth/AdminLogin/Login/index.jsx","modules/Auth/Login/hooks/index.js","../node_modules/@tanstack/react-query/src/useIsMutating.ts"],"sourcesContent":["import axios from \"axios\";\nimport { baseURL } from \"./constants\";\n\nconst config = { baseURL: baseURL };\nexport const axiosInstance = axios.create(config);\n","// export const baseURL = \"https://pyams.azurewebsites.net/api/v1\";\nexport const baseURL = \"https://impactlife.azurewebsites.net/api/v1\";\n// export const baseURL = \"https://qrcodeattendance.azurewebsites.net/api\";\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useIsMutating } from \"@tanstack/react-query\";\nimport { Button, FormGroup, Input, PasswordInput } from \"mtforms\";\nimport { PublicPaths } from \"../../../../routes/path\";\nimport { useLogin } from \"../../Login/hooks\";\n\nconst Index = () => {\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const isLoading = useIsMutating();\n\n  const { mutate } = useLogin();\n\n  const handleChange = (name, value) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const validationHandler = (name, error) => {\n    setErrors({ ...errors, [name]: error });\n  };\n\n  const submitHandler = () => {\n    mutate(formData);\n  };\n\n  return (\n    <>\n      <h1>Admin Login</h1>\n      <FormGroup onSubmit={submitHandler}>\n        <Input\n          name=\"email\"\n          label=\"Email Address\"\n          value={formData[\"email\"]}\n          onChange={handleChange}\n          type=\"email\"\n          validationHandler={validationHandler}\n          error={errors.email}\n          required={true}\n          size=\"large\"\n        />\n        <PasswordInput\n          name=\"password\"\n          label=\"Password\"\n          value={formData[\"password\"]}\n          onChange={handleChange}\n          validationHandler={validationHandler}\n          error={errors.password}\n          required={true}\n          size=\"large\"\n        />\n\n        <Button\n          title=\"login\"\n          size=\"large\"\n          className={isLoading ? \"btn-disabled\" : \"\"}\n          style={{ marginTop: \"1rem\" }}\n          loading={isLoading === 1}\n          disabled={isLoading === 1}\n        />\n      </FormGroup>\n\n      <div className=\"link-wrapper\">\n        <span>Forgot your password? </span>\n        <Link to={PublicPaths.FORGOT_PASSWORD}>Reset it here</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n","import { axiosInstance } from \"../../../../axios-Instance\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../../../context\";\nimport { getLoginToken, setLoginToken } from \"../../../../storage\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { errorAlert, successAlert, toastOptions } from \"../../../../utils\";\nimport { queryKeys } from \"../../../../react-query/constants\";\nimport { toast } from \"react-toastify\";\n\nasync function userLogin(formData) {\n\tconst data = await axiosInstance({\n\t\turl: \"/auth\",\n\t\tmethod: \"POST\",\n\t\tdata: formData,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\treturn data?.data;\n}\n\nasync function getMe() {\n    const data = await axiosInstance({\n      url: \"/auth/me\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getLoginToken()}`,\n      },\n    });\n  \n    return data?.data;\n  }\n\nexport function useLogin() {\n\tconst authCtx = useContext(AuthContext);\n\tconst { mutate, isError, error, isSuccess, reset } = useMutation({\n\t\tmutationFn: (formData) => userLogin(formData),\n\t\tonSuccess: (data) => {\n\t\t\tsuccessAlert(\"Login Successful\");\n\t\t\tsetLoginToken(data?.token);\n\t\t\tauthCtx.authenticate(data?.token);\n\t\t},\n\t\tonError: (error) => {\n\t\t\terrorAlert(error);\n\t\t},\n\t});\n\treturn { mutate, isError, error, isSuccess, reset };\n}\n\nexport function useGetMe() {\n\tconst fallback = [];\n\tconst { data = fallback } = useQuery({\n\t  queryKey: [queryKeys.me],\n\t  queryFn: () => getMe(),\n\t  onError: (error) => {\n\t\t\n\t\ttoast.error(error, toastOptions);\n\t  },\n\t});\n\treturn data;\n  }\n  ","'use client'\nimport * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationKey, MutationFilters } from '@tanstack/query-core'\nimport { notifyManager, parseMutationFilterArgs } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\nimport { useQueryClient } from './QueryClientProvider'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsMutating(\n  filters?: MutationFilters,\n  options?: Options,\n): number\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n  options?: Options,\n): number\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'> | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3)\n\n  const queryClient = useQueryClient({ context: options.context })\n  const mutationCache = queryClient.getMutationCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [mutationCache],\n    ),\n    () => queryClient.isMutating(filters),\n    () => queryClient.isMutating(filters),\n  )\n}\n"],"names":["config","baseURL","axiosInstance","axios","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","isLoading","useIsMutating","mutate","useLogin","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","error","_jsxs","_Fragment","children","_jsx","FormGroup","onSubmit","Input","label","onChange","type","email","required","size","PasswordInput","password","Button","title","className","style","marginTop","loading","disabled","Link","to","PublicPaths","_userLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","url","method","headers","sent","abrupt","stop","apply","arguments","_getMe","_callee2","_context2","Authorization","concat","getLoginToken","authCtx","useContext","AuthContext","_useMutation","useMutation","mutationFn","_x","userLogin","onSuccess","successAlert","setLoginToken","token","authenticate","onError","errorAlert","isError","isSuccess","reset","useGetMe","_useQuery","useQuery","queryKey","queryKeys","queryFn","getMe","toast","toastOptions","_useQuery$data","arg1","arg2","arg3","_parseMutationFilterA","parseMutationFilterArgs","_parseMutationFilterA2","filters","_parseMutationFilterA3","options","mutationCache","queryClient","getMutationCache","useSyncExternalStore","React","onStoreChange","subscribe","notifyManager","isMutating"],"sourceRoot":""}